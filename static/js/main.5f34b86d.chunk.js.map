{"version":3,"sources":["components/Header.js","components/Action.js","components/Option.js","components/Options.js","components/Addoption.js","components/Modal.js","components/IndecisionApp.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","subTitle","defaultProps","Action","onClick","pickOptionHandler","disabled","hasOptions","Option","count","option","e","handleDeleteOption","Options","handleDeleteOptions","options","length","map","index","components_Option","key","Addoption","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","optionSubmitted","bind","assertThisInitialized","state","error","undefined","preventDefault","currentTarget","value","trim","handleAddOption","setState","onSubmit","type","name","React","Component","Modal","lib_default","isOpen","selectedOption","contentLabel","onRequestClose","closeModalhandler","closeTimeoutMS","IndecisionApp","json","localStorage","getItem","JSON","parse","err","console","log","prevState","prevProps","stringify","setItem","randNum","Math","floor","random","optionForClient","indexOf","concat","optionToDelete","toConsumableArray","filter","components_Header","components_Action","components_Options","components_Addoption","components_Modal","ReactDOM","render","components_IndecisionApp","document","getElementById"],"mappings":"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","file":"static/js/main.5f34b86d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = (props) => \r\n    <div className='header'>\r\n        <div className='container'>\r\n            <h1 className='header__title'>{props.title}</h1>\r\n            <h3 className='header__subtitle'>{props.subTitle}</h3>\r\n        </div>\r\n    </div>\r\nHeader.defaultProps = {\r\n    title : 'Indecision Picker',\r\n    subTitle : 'Put your life in the hands of a computer'\r\n}\r\nexport default Header","import React from 'react'\r\n\r\nconst Action = (props) => <div>\r\n            <button className='big-btn' \r\n            onClick={props.pickOptionHandler}\r\n            disabled={!props.hasOptions}\r\n            >What should I do?</button>    \r\n        </div>\r\nexport default Action","import React from 'react'\r\nconst Option = (props) => {\r\n    return(\r\n        <div className='option'>\r\n            <p>{props.count}. {props.option}</p>\r\n            <button className='btn btn--link' onClick={(e) => props.handleDeleteOption(props.option)}>Remove</button>            \r\n        </div>\r\n    )\r\n}\r\nexport default Option","import React from 'react'\r\nimport Option from './Option'\r\nconst Options = (props) => <div>\r\n            <div className='widget-header'>\r\n                <h3>Your Options</h3>\r\n                <button onClick={props.handleDeleteOptions}\r\n                className='btn btn--link'>Remove All</button>\r\n            </div>\r\n            {props.options.length < 1 && <p className='forP'>Please add some options to get started</p>}\r\n            {props.options.map((option, index) => {\r\n                return <Option option={option} \r\n                            key={index}\r\n                            count={index +1}\r\n                            handleDeleteOption={props.handleDeleteOption}\r\n                        />\r\n            })}\r\n        </div>\r\nexport default Options","import React from 'react'\r\nclass Addoption extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.optionSubmitted = this.optionSubmitted.bind(this)\r\n        this.state = {\r\n            error: undefined\r\n        }\r\n    }\r\n    optionSubmitted(e){\r\n        e.preventDefault()\r\n        const option = e.currentTarget[0].value.trim()\r\n        const error = this.props.handleAddOption(option)\r\n        this.setState(() => ({error}))\r\n        e.currentTarget[0].value = ''\r\n    }\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                 {this.state.error && <p className='add-option-error'>{this.state.error}</p>}\r\n                <form  className='add-option'\r\n                    onSubmit={this.optionSubmitted}>\r\n                    <input className='add-option-input' type='text' name='option'/>\r\n                    <input className='btn' type='submit' value='Add option'/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Addoption","import React from 'react'\r\nimport ReactModal from 'react-modal'\r\n\r\n\r\nconst Modal = (props) => <ReactModal\r\n                            isOpen={props.selectedOption}\r\n                            contentLabel=\"Seletected Option\"\r\n                            onRequestClose={props.closeModalhandler} \r\n                            closeTimeoutMS={500}\r\n                            className='modal'\r\n                            >\r\n                            <h3 className='modal-title'>Seletected Option</h3>\r\n                            {props.selectedOption && <p className='modal-body'>{props.selectedOption}</p>}\r\n                            <button className='btn' onClick={props.closeModalhandler}>Okay</button>\r\n                        </ReactModal>\r\nexport default Modal\r\n// Modal.setAppElement(document.getElementById('root'))","import React from 'react'\r\nimport Header from './Header'\r\nimport Action from './Action'\r\nimport Options from './Options'\r\nimport Addoption from './Addoption'\r\nimport Modal from './Modal'\r\n\r\nclass IndecisionApp extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            options: props.options,\r\n            selectedOption : undefined\r\n        }\r\n        this.handleDeleteOptions = this.handleDeleteOptions.bind(this)\r\n        this.pickOptionHandler = this.pickOptionHandler.bind(this)\r\n        this.handleAddOption = this.handleAddOption.bind(this)\r\n        this.handleDeleteOption = this.handleDeleteOption.bind(this)\r\n        this.closeModalhandler = this.closeModalhandler.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        try{\r\n            const json = localStorage.getItem('options')\r\n            const options = JSON.parse(json)\r\n            if(options){\r\n                this.setState({ options })\r\n            }\r\n            // console.log(JSON.parse(json))\r\n        }catch(err){\r\n            console.log('No Data Recived Yet')\r\n        }\r\n    }\r\n    componentDidUpdate(prevState, prevProps){\r\n        // console.log('A component was updated now')\r\n        if(prevState.options.length !== this.state.options.length){\r\n            const json = JSON.stringify(this.state.options)\r\n            localStorage.setItem('options', json)\r\n            // console.log('saving data')\r\n        } \r\n    }\r\n\r\n    handleDeleteOptions(){\r\n        this.setState({options: []})\r\n        // console.log('localStorage has been cleared')\r\n    }\r\n    pickOptionHandler(){\r\n        const randNum = Math.floor(Math.random() * this.state.options.length)\r\n        const optionForClient = this.state.options[randNum]\r\n        this.setState(() => ({\r\n            selectedOption: optionForClient\r\n        }))\r\n    }\r\n    handleAddOption(option){\r\n        if(!option){\r\n            return <p className='forP'>Enter a valid option to add</p>\r\n        }else if (this.state.options.indexOf(option) > -1){\r\n            return <p className='forP'>This option already exits'</p>\r\n        }\r\n        this.setState((prevState) => ({ options: prevState.options.concat(option)}))\r\n    }\r\n    handleDeleteOption(optionToDelete){\r\n        // this.setState(() => {\r\n            const prevState = [...this.state.options].filter(option => {\r\n                return optionToDelete !== option\r\n            })\r\n            this.setState({options: prevState})\r\n    }\r\n    closeModalhandler(e){\r\n        // const value = false\r\n        this.setState({selectedOption: undefined})\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header/>\r\n                <div className='container'>\r\n                    <Action \r\n                        hasOptions={this.state.options} \r\n                        pickOptionHandler={this.pickOptionHandler}                    \r\n                    />\r\n                    <div className='widget'>\r\n                        <Options \r\n                            options={this.state.options}\r\n                            handleDeleteOptions={this.handleDeleteOptions}\r\n                            handleDeleteOption={this.handleDeleteOption}\r\n                        />\r\n                        <Addoption handleAddOption={this.handleAddOption}/>\r\n                    </div>\r\n                </div>\r\n                <Modal \r\n                    selectedOption={this.state.selectedOption}\r\n                    closeModalhandler={this.closeModalhandler}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nIndecisionApp.defaultProps = {\r\n    options : []\r\n}\r\nexport default IndecisionApp","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport IndecisionApp from './components/IndecisionApp'\r\nimport 'normalize.css/normalize.css'\r\nimport './style/style.scss'\r\n\r\nReactDOM.render(<IndecisionApp/>, document.getElementById('root'))"],"sourceRoot":""}